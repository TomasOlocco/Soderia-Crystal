@model SODERIA_I.ViewModels.CompraViewModel

@{
    ViewData["Title"] = "Facturación";
}

<div class="container m-3">
    <!-- Agregué mb-5 para margen inferior -->
    <h1>Generar Facturas</h1>
    <hr />

    <!-- Formulario para seleccionar zona y cliente -->
    <form asp-action="Create" asp-controller="Facturacion" method="get">
        <!-- Zona de filtro -->
        <div class="form-group mb-3">
            <label for="zonaFiltro">Seleccione una zona:</label>
            <select id="zonaFiltro" class="form-control" onchange="filtrarClientesPorZona()">
                <option value="">Seleccione una zona</option>
                @foreach (var zona in Model.Clientes.Select(c => c.zona).Distinct())
                {
                    <option value="@zona" selected="@(zona == Model.ZonaSeleccionada ? "selected" : null)">
                        @zona
                    </option>
                }
            </select>
        </div>

        <!-- Dropdown para seleccionar cliente -->
        <div class="form-group mb-3">
            <label for="ClienteId">Seleccione un cliente:</label>
            <select name="clienteId" class="form-control" id="clientesDropdown" onchange="this.form.submit()">
                <option value="">Seleccione un cliente</option>
                @foreach (var cliente in Model.Clientes)
                {
                    <option value="@cliente.Id" data-zona="@cliente.zona"
                            selected="@(cliente.Id == Model.ClienteIdSeleccionado ? "selected" : null)">
                        @($"{cliente.nombre} {cliente.apellido}")
                    </option>
                }
            </select>
        </div>
    </form>

    <!-- Tabla de compras del último mes -->
    @if (Model.ComprasDelUltimoMes != null && Model.ComprasDelUltimoMes.Any())
    {
        <hr />
        <h3>Compras del último mes</h3>
        <div class="table-responsive">
            <!-- Hace que la tabla sea responsive -->
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Cliente</th>
                        <th>Tipo de Compra</th>
                        <th>Cantidad</th>
                        <th>Fecha</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        decimal montoTotal = 0; // Variable para calcular el monto total
                    }
                    @foreach (var compra in Model.ComprasDelUltimoMes)
                    {
                        decimal precio = 0;
                        switch (compra.TipoCompraId)
                        {
                            case 1: // Bidón 12 litros
                                precio = 1500;
                                break;
                            case 2: // Bidón 20 litros
                                precio = 2500;
                                break;
                            case 3: // Sifón
                                precio = 500;
                                break;
                            case 4: //12 reparto
                                precio = 1700;
                                break;
                            case 5: //20 reparto
                                precio = 2800;
                                break;
                            case 6: //sifon reparto
                            precio = 600;
                            break;
                        }
                        decimal monto = precio * compra.Cantidad;
                        montoTotal += monto; // Sumar al monto total

                        <tr>
                            <td>@compra.cliente.NombreCompleto</td> <!-- Nombre del cliente -->
                            <td>
                                @switch (compra.TipoCompraId)
                                {
                                    case 1:
                                        <text>Bidón 12 litros</text>
                                        break;
                                    case 2:
                                        <text>Bidón 20 litros</text>
                                        break;
                                    case 3:
                                        <text>Sifón</text>
                                        break;
                                    case 4:
                                        <text>Bidón 12 litros (Reparto)</text>
                                        break;
                                    case 5:
                                        <text>Bidón 20 litros (Reparto)</text>
                                        break;
                                    case 6:
                                        <text>Sifón (Reparto)</text>
                                        break;
                                    default:
                                        <text>Desconocido</text>
                                        break;
                                }
                            </td> <!-- Tipo de compra -->
                            <td>@(Convert.ToInt32(compra.Cantidad))</td> <!-- Cantidad -->
                            <td>@compra.fecha.ToShortDateString()</td> <!-- Fecha -->
                        </tr>
                    }
                    <!-- Fila para el monto total -->
                    <tr>
                        <td colspan="3" class="text-right"><strong>Total a pagar:</strong></td>
                        <td><strong>@montoTotal.ToString("C")</strong></td>
                    </tr>
                </tbody>
            </table>
        </div>

        <!-- Campos ocultos para reutilizar datos en la factura digital -->
        <input type="hidden" id="totalFactura" name="totalFactura" value="@montoTotal" />
        <input type="hidden" id="detalleCompras" name="detalleCompras" value='@Newtonsoft.Json.JsonConvert.SerializeObject(Model.ComprasDelUltimoMes)' />

        <!-- Botón para descargar la factura -->
        <div class="mt-3">
            <a asp-controller="Facturacion" asp-action="GenerarFactura" asp-route-clienteId="@Model.ClienteIdSeleccionado" asp-route-totalFactura="@montoTotal" asp-route-detalleCompras='@Newtonsoft.Json.JsonConvert.SerializeObject(Model.ComprasDelUltimoMes)' class="btn btn-primary">
                Descargar Boleta
            </a>
            <hr />
        </div>
    }
</div>

<script>
    function calcularMonto() {
        const tipoCompraDropdown = document.getElementById("TipoCompraId");
        const tipoCompraSeleccionado = tipoCompraDropdown.options[tipoCompraDropdown.selectedIndex];
        const precio = parseFloat(tipoCompraSeleccionado.getAttribute("data-precio"));
        const cantidadInput = document.querySelector("[name='Cantidad']");
        const cantidad = parseInt(cantidadInput.value) || 0;
        const montoTotal = precio * cantidad;
        const montoInput = document.querySelector("[name='Monto']");
        montoInput.value = montoTotal.toFixed(2);
    }

    function filtrarClientesPorZona() {
        var zonaSeleccionada = document.getElementById('zonaFiltro').value;
        var clientesDropdown = document.getElementById('clientesDropdown');

        for (var i = 0; i < clientesDropdown.options.length; i++) {
            var option = clientesDropdown.options[i];
            var zonaCliente = option.getAttribute('data-zona');

            if (zonaSeleccionada === '' || zonaCliente === zonaSeleccionada) {
                option.style.display = 'block';
            } else {
                option.style.display = 'none';
            }
        }
    }
</script>